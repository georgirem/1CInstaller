<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pingTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAVlbSi2Zm3cNXV9OrU1PRZWZm3cNYWNTFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVVWqA09P
        zVNcXNegY2Pcs2dn3cFnZ97CZ2fewmdn3sJnZ97CZ2fewmdn3sJnZ97CZ2fewmdn3sJnZ97CZ2fewmdn
        3sJYWNTFAAAAAAAAAABeXtikj4/3/2Zm3cNUVNCFj4/3/2xs4eEAAAAAAAAAAAAAAAAAAAAAAAAAAFRU
        0FhkZNvKgoLv/I+P9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P
        9/+Pj/f/j4/3/2xs4uAAAAAAAAAAAF5e2KSPj/f/Zmbdw1RU0IWPj/f/bGzh4QAAAAAAAAAAAAAAAAAA
        AABWVtSKfHzq8I+P9/+EhO/6aGje1GRk27JgYNmkX1/Zo19f2aNfX9mjX1/Zo19f2aNfX9mjX1/Zo19f
        2aNfX9mjX1/Zo19f2aNfX9mjVlbSpQAAAAAAAAAAXl7YpI+P9/9mZt3DVFTQhY+P9/9sbOHhAAAAAAAA
        AAAAAAAAV1fTe4KC7veOjvb/aGje1FRUz2dVVaoDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABeXtikj4/3/2Zm3cNUVNCFj4/3/2xs
        4eEAAAAAAAAAAEhIzip0dOXojo73/2Ji2spKSskYPz+/BFZW1HNiYtuyZ2fdwWdn3sJnZ97CZ2fewmdn
        3sJnZ97CZ2fewmdn3sJnZ97CZ2fewmdn3sJnZ97CZ2fewlhY1MUAAAAAAAAAAF5e2KSPj/f/Zmbdw1RU
        0IWPj/f/bGzh4QAAAAAAAAAAXFzYrY6O9/9wcOLhUFDMIz8/vxBdXdjBiIjy/Y+P9/+Pj/f/j4/3/4+P
        9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P9/+Pj/f/bGzi4AAAAAAAAAAAXl7YpI+P
        9/9mZt3DVFTQhY+P9/9sbOHhAAAAADg4xgltbePdj4/3/1pa1ZsAAAAAW1vXr46O9v+Hh/H8ZWXcx19f
        2qZfX9mjX1/Zo19f2aNfX9mjX1/Zo19f2aNfX9mjX1/Zo19f2aNfX9mjX1/Zo19f2aNWVtKlAAAAAAAA
        AABeXtikj4/3/2Zm3cNUVNCFj4/3/2xs4eEAAAAAS0vMR4KC7v5+fuz4SkrOOklJySZ3d+jvjIz1/1hY
        1aV/f/8CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAF5e2KSPj/f/Zmbdw1RU0IWPj/f/bGzh4QAAAABSUtByi4v0/3Fx5OY/P78MUlLQcouL
        9P93d+jtRETEGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAXl7YpI+P9/9mZt3DVFTQhY+P9/9sbOHhAAAAAFJS0HKLi/T/cXHj5j8/
        vwxSUtByi4v0/3Z25+1ERMQaAAAAAAAAAAAAAAAATk7OXmho3uNfX9fkQ0PJJkxMzkllZdzlX1/Z40ND
        ySYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABeXtikj4/3/2Zm3cNUVNCFj4/3/2xs4eEAAAAAS0vMR4OD
        7v5+fuz4R0fNOUdHyid4eOjvjIz1/1hY06R/f/8CAAAAAEVF0AtfX9jBj4/3/2pq3tZVVaoDVlbRgo2N
        9f9vb+HkRUXQCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF5e2KSPj/f/Zmbdw1RU0IWPj/f/bGzh4QAA
        AAA4OMYJbW3i3o+P9/9ZWdOaAAAAAF1d1rGOjvb/iIjx+2Rk3MZgYNisaGjf0YuL9P+FhfD8WVnUiQAA
        AABiYtu6j4/3/2Vl3MEAAAAAAAAAAAAAAAAAAAAAAAAAAFhY1MVmZt3Da2vf24+P9/9mZt3DVFTQhY+P
        9/9sbOHhAAAAAAAAAABeXtitjo73/3Fx4uFSUsoiS0vDEV5e2MKIiPL9j4/3/4+P9/+Pj/f/fn7s+Fpa
        1ql/f/8CUlLTV35+7PSLi/T/VlbUhAAAAAAAAAAAAAAAAAAAAAAAAAAAbGzh4Y+P9/+Pj/f/j4/3/2Zm
        3cNUVNCFj4/3/2xs4eEAAAAAAAAAAE1Nzyt0dObojo73/2Ji28lFRdAWMzPMBVRU0XZiYtmzZWXcv19f
        2K1UVM9bAAAAAFNT0DdsbOLcj4/3/2Zm3tI4OMYJAAAAAAAAAAAAAAAAAAAAAAAAAABVVdKlXl7YpF5e
        2KReXtikVlbSi1RU0IWPj/f/bGzh4QAAAAAAAAAAAAAAAFhY03yDg+/3jo72/2dn3dNRUdFkf3//AgAA
        AAAAAAAAAAAAAD8/vwhVVdCDcnLk4Y+P9/91defoUVHPSwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAVlbSbV5e2KReXtikWFjVyY+P9/9sbOHhAAAAAAAAAAAAAAAAAAAAAFhY1It9fezwj4/3/4SE
        7/lpad7TY2PcsWBg2KdiYtq2bGzg24iI8/6Pj/f/cXHl4lZW0mEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABeXtikj4/3/4+P9/+Pj/f/j4/3/2xs4eEAAAAAAAAAAAAAAAAAAAAAAAAAAFVV
        0VpjY9vKhITw/I+P9/+Pj/f/j4/3/4+P9/+Ojvf/fX3r9mBg2rtTU9A3AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFZW0otmZt3DZmbdw2Zm3cNmZt3DWFjUxQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAD8/vwRRUdJVXV3XoWRk3bRlZdy/ZGTbslpa1ZhQUNA8AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////////////8D8AADA+AAAwPAAAMDg
        f//AwAAAwMAAAMCEAADAgD//wIB//8CAcA/AgCAPwIQBHwDAAB8AwAQfAOBwP8DwAH/A+AD/wPwD////
        //////////////////////////////////8=
</value>
  </data>
</root>